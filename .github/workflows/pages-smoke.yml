name: Pages smoke check

on:
  push:
    branches: [ gh-pages ]
  workflow_dispatch: {}

jobs:
  smoke:
    name: Smoke check GitHub Pages
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Lightweight smoke test
        run: |
          set -euo pipefail
          REPO_FULL="${{ github.repository }}"
          OWNER="${REPO_FULL%%/*}"
          NAME="${REPO_FULL##*/}"
          URL="https://${OWNER}.github.io/${NAME}/"
          echo "Checking Pages URL: $URL"

          # root must return 200
          HTTP=$(curl -fsS -o /dev/null -w "%{http_code}" "$URL" || true)
          if [ "$HTTP" != "200" ]; then
            echo "ERROR: site root returned HTTP $HTTP"
            echo "---- VERBOSE CURL OUTPUT ----"
            curl -v "$URL" || true
            exit 1
          fi

          HTML=$(curl -fsS "$URL")
          echo "$HTML" | sed -n '1,60p' > site.html

          # basic assertion: root div exists
          echo "Checking for <div id=\"root\">..."
          echo "$HTML" | grep -q '<div id="root"' || (echo "ERROR: root div not found" && echo "HTML head:" && echo "$HTML" | sed -n '1,120p' && exit 1)

          # check for index-latest availability and SW-unregister marker
          LATEST_URL="${URL}index-latest.html"
          echo "Probing index-latest: $LATEST_URL"
          HTTP_LATEST=$(curl -fsS -o /dev/null -w "%{http_code}" -H 'Cache-Control: no-cache' "$LATEST_URL" || true)
          if [ "$HTTP_LATEST" != "200" ]; then
            echo "WARNING: index-latest returned $HTTP_LATEST";
            curl -fsS -I -H 'Cache-Control: no-cache' "$LATEST_URL" || true
          else
            echo "index-latest reachable (200); validating content"
            LHTML=$(curl -fsS -H 'Cache-Control: no-cache' "$LATEST_URL")
            echo "$LHTML" | grep -q 'meta name="build" content="latest"' || echo "NOTE: build meta not found in index-latest"
            echo "$LHTML" | grep -q 'unregister' && echo "Found unregister script in index-latest" || echo "No unregister script found in index-latest"
          fi

          # Check for service worker presence at root and repo-scoped path
          SW_ROOT="https://${OWNER}.github.io/sw.js"
          SW_REPO="${URL}sw.js"
          echo "Checking service worker at $SW_ROOT and $SW_REPO"
          HTTP_SW_ROOT=$(curl -fsS -o /dev/null -w "%{http_code}" -H 'Cache-Control: no-cache' "$SW_ROOT" || true)
          HTTP_SW_REPO=$(curl -fsS -o /dev/null -w "%{http_code}" -H 'Cache-Control: no-cache' "$SW_REPO" || true)
          if [ "$HTTP_SW_ROOT" = "200" ] || [ "$HTTP_SW_REPO" = "200" ]; then
            echo "Service worker is present (root:$HTTP_SW_ROOT repo:$HTTP_SW_REPO)"
          else
            echo "Service worker not found at expected locations (root:$HTTP_SW_ROOT repo:$HTTP_SW_REPO)";
          fi

          # find asset paths referenced under /<repo>/assets/
          ASSETS=$(echo "$HTML" | grep -oE "/${NAME}/assets/[^\"'\s>]+" | sort -u || true)
          if [ -z "$ASSETS" ]; then
            echo "WARNING: no assets found in HTML â€” nothing to check"
            exit 0
          fi

          echo "Found assets:" && echo "$ASSETS"
          for a in $ASSETS; do
            FULL="https://${OWNER}.github.io${a}"
            echo "Checking asset: $FULL"
            HTTP=$(curl -fsS -o /dev/null -w "%{http_code}" "$FULL" || true)
            if [ "$HTTP" != "200" ]; then
              echo "ERROR: asset $FULL returned $HTTP"
              curl -fsS -I "$FULL" || true
              exit 1
            fi
          done

          echo "Pages smoke test passed: root + assets OK"
